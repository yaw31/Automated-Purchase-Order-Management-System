/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package assignment_oodj_group33;


import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class SMDailySalesEntryGUI extends javax.swing.JFrame {
    private User user;
    public SMDailySalesEntryGUI(User user) {
        this.user = user;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JBtnBack = new javax.swing.JButton();
        JLabelSalesID = new javax.swing.JLabel();
        JLabelItemID = new javax.swing.JLabel();
        JLabelQuantitySold = new javax.swing.JLabel();
        JLabelDate = new javax.swing.JLabel();
        JTextSalesManagerID = new javax.swing.JTextField();
        JTextItemID = new javax.swing.JTextField();
        JTextQuantitySold = new javax.swing.JTextField();
        JTextDate = new javax.swing.JTextField();
        JBtnAdd = new javax.swing.JButton();
        JBtnEdit = new javax.swing.JButton();
        JBtnDelete = new javax.swing.JButton();
        JBtnClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableSalesEntry = new javax.swing.JTable();
        JLabelDailySalesEntry = new javax.swing.JLabel();
        JLabelSalesEntryID = new javax.swing.JLabel();
        JTextSalesEntryID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Daily Sales Entry Page");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        JBtnBack.setText("Back");
        JBtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtnBackActionPerformed(evt);
            }
        });

        JLabelSalesID.setText("SalesManagerID:");

        JLabelItemID.setText("ItemID:");

        JLabelQuantitySold.setText("Quantity Sold:");

        JLabelDate.setText("Date:");

        JTextDate.setText("yyyy-mm-dd");
        JTextDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTextDateMouseClicked(evt);
            }
        });

        JBtnAdd.setText("Add");
        JBtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtnAddActionPerformed(evt);
            }
        });

        JBtnEdit.setText("Edit");
        JBtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtnEditActionPerformed(evt);
            }
        });

        JBtnDelete.setText("Delete");
        JBtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtnDeleteActionPerformed(evt);
            }
        });

        JBtnClear.setText("Clear");
        JBtnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtnClearActionPerformed(evt);
            }
        });

        JTableSalesEntry.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "SalesEntryID", "ItemID", "Quantity Sold", "Date", "SalesManagerID"
            }
        ));
        jScrollPane1.setViewportView(JTableSalesEntry);

        JLabelDailySalesEntry.setText("DAILY SALES ENTRY");

        JLabelSalesEntryID.setText("SalesEntryID:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JBtnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(JBtnEdit)
                        .addGap(18, 18, 18)
                        .addComponent(JBtnDelete)
                        .addGap(18, 18, 18)
                        .addComponent(JBtnClear)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(JLabelQuantitySold, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(JLabelItemID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(JLabelSalesID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(JLabelDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(JLabelSalesEntryID))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(JTextSalesManagerID)
                                        .addComponent(JTextItemID)
                                        .addComponent(JTextQuantitySold)
                                        .addComponent(JTextDate, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                                    .addComponent(JTextSalesEntryID, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(JLabelDailySalesEntry))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                        .addComponent(JBtnBack)
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(JLabelDailySalesEntry)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLabelSalesEntryID)
                    .addComponent(JTextSalesEntryID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLabelItemID)
                    .addComponent(JTextItemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLabelQuantitySold)
                    .addComponent(JTextQuantitySold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLabelDate)
                    .addComponent(JTextDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JLabelSalesID)
                            .addComponent(JTextSalesManagerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(JBtnBack)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(JBtnAdd)
                                    .addComponent(JBtnEdit)
                                    .addComponent(JBtnDelete)
                                    .addComponent(JBtnClear))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(14, Short.MAX_VALUE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void JBtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtnBackActionPerformed
        SalesManagerMenuGUI SMmenuForm = new SalesManagerMenuGUI(this.user);
        SMmenuForm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_JBtnBackActionPerformed

    private void JBtnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtnClearActionPerformed
        JTextSalesManagerID.setText("");
        JTextItemID.setText("");
        JTextQuantitySold.setText("");
        JTextDate.setText("yyyy-mm-dd");
        JTextSalesEntryID.setText("");
        
        loadSalesDataToTable();
    }//GEN-LAST:event_JBtnClearActionPerformed

    private void JBtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtnAddActionPerformed
        try {
            String newSalesEntryID = JTextSalesEntryID.getText();
            String newItemID = JTextItemID.getText();
            String newQuantitySold = JTextQuantitySold.getText();
            String newDate = JTextDate.getText();
            String newSalesManagerID = JTextSalesManagerID.getText();
            
            if (!validateSalesEntryInputs(newSalesManagerID, newItemID, newQuantitySold, newDate, newSalesEntryID)) return;
            
            int quantitySold = Integer.parseInt(JTextQuantitySold.getText());

            String itemFilePath = "item.txt";
            String salesEntryFilePath = "sales_entry.txt";

            DailySalesEntry.addNewSale(
                newSalesEntryID,
                newItemID,
                quantitySold,
                newDate,
                newSalesManagerID,
                itemFilePath,
                salesEntryFilePath
            );

            JOptionPane.showMessageDialog(this, "Sales entry added and the stock is updated.");
            loadSalesDataToTable();

        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Unexpected error: " + e.getMessage());
        }
    }//GEN-LAST:event_JBtnAddActionPerformed

    private void JBtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtnEditActionPerformed
        try {
            String salesentryID = JTextSalesEntryID.getText();
            String newItemID = JTextItemID.getText();
            String QuantitySold = JTextQuantitySold.getText();
            String newDate = JTextDate.getText();
            String salesmanagerID = JTextSalesManagerID.getText();
            
            if (!validateSalesEntryInputs(salesentryID, newItemID, QuantitySold, newDate, salesmanagerID)) return;
            
            int newQuantitySold = Integer.parseInt(JTextQuantitySold.getText());
            String itemFilePath = "item.txt";
            String salesEntryFilePath = "sales_entry.txt";

            DailySalesEntry.editSale(
                    salesentryID, 
                    newItemID, 
                    newQuantitySold, 
                    newDate, 
                    salesmanagerID, 
                    itemFilePath, 
                    salesEntryFilePath
            );

            JOptionPane.showMessageDialog(null, "Sales entry updated successfully.");
            loadSalesDataToTable();

        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Unexpected error: " + ex.getMessage());
        }
    }//GEN-LAST:event_JBtnEditActionPerformed

    private void JBtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtnDeleteActionPerformed
        int selectedRow = JTableSalesEntry.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this,
                "Please select a Sales Entry from the table to delete.",
                "No Selection",
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String exsalesentryID = JTableSalesEntry.getValueAt(selectedRow, 0).toString();
        
        int confirm = JOptionPane.showConfirmDialog(this,
            "Are you sure you want to delete the SalesEntry: " + exsalesentryID + "?",
            "Confirm Deletion",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE);

        if (confirm == JOptionPane.YES_OPTION) {
            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    String itemFilePath = "item.txt";
                    String salesEntryFilePath = "sales_entry.txt";

                    DailySalesEntry.deleteSale(
                            exsalesentryID, 
                            itemFilePath, 
                            salesEntryFilePath
                    );

                    JOptionPane.showMessageDialog(this, "Sales entry successfully deleted.");
                    loadSalesDataToTable();

                } catch (IllegalArgumentException e) {
                    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Unexpected error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_JBtnDeleteActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        loadSalesDataToTable();
        
        JTableSalesEntry.getSelectionModel().addListSelectionListener(event -> {
        if (!event.getValueIsAdjusting() && JTableSalesEntry.getSelectedRow() != -1) {
            int selectedRow = JTableSalesEntry.getSelectedRow();
            JTextSalesEntryID.setText(JTableSalesEntry.getValueAt(selectedRow, 0).toString());
            JTextItemID.setText(JTableSalesEntry.getValueAt(selectedRow, 1).toString());
            JTextQuantitySold.setText(JTableSalesEntry.getValueAt(selectedRow, 2).toString());
            JTextDate.setText(JTableSalesEntry.getValueAt(selectedRow, 3).toString());
            JTextSalesManagerID.setText(JTableSalesEntry.getValueAt(selectedRow, 4).toString());
            
            ArrayList<DailySalesEntry> list = DailySalesEntry.loadFromFile("sales_entry.txt");
            if (selectedRow < list.size()) {
                DailySalesEntry SE = list.get(selectedRow);
                JTextSalesEntryID.setText(SE.getSalesEntryID());
                JTextItemID.setText(SE.getItemID());
                JTextQuantitySold.setText(String.valueOf(SE.getQuantitySold()));
                JTextDate.setText(SE.getDate());
                JTextSalesManagerID.setText(SE.getSalesManagerID());
                }
            }
        });
    }//GEN-LAST:event_formWindowOpened

    private void JTextDateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTextDateMouseClicked
        JTextDate.setText("");
    }//GEN-LAST:event_JTextDateMouseClicked

    private void loadSalesDataToTable() {
        DefaultTableModel model = (DefaultTableModel) JTableSalesEntry.getModel();
        model.setRowCount(0);

        ArrayList<DailySalesEntry> list = DailySalesEntry.loadFromFile("sales_entry.txt");
        for (DailySalesEntry SE : list) {
            model.addRow(new Object[]{
                SE.getSalesEntryID(),
                SE.getItemID(),
                SE.getQuantitySold(),
                SE.getDate(),
                SE.getSalesManagerID()
            });
        }
    }
    
    private boolean validateSalesEntryInputs(String salesmanagerID, String itemID, String quantitySold, String date, String salesEntryID) {
        if (salesmanagerID.isEmpty() || itemID.isEmpty() || quantitySold.isEmpty() || date.isEmpty() || salesEntryID.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all fields.", "Input Error", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        try {
            int quantity = Integer.parseInt(quantitySold);
            if (quantity < 0) {
                JOptionPane.showMessageDialog(this, "Quantity must be a non-negative number.", "Input Error", JOptionPane.WARNING_MESSAGE);
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Quantity must be a valid number.", "Input Error", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBtnAdd;
    private javax.swing.JButton JBtnBack;
    private javax.swing.JButton JBtnClear;
    private javax.swing.JButton JBtnDelete;
    private javax.swing.JButton JBtnEdit;
    private javax.swing.JLabel JLabelDailySalesEntry;
    private javax.swing.JLabel JLabelDate;
    private javax.swing.JLabel JLabelItemID;
    private javax.swing.JLabel JLabelQuantitySold;
    private javax.swing.JLabel JLabelSalesEntryID;
    private javax.swing.JLabel JLabelSalesID;
    private javax.swing.JTable JTableSalesEntry;
    private javax.swing.JTextField JTextDate;
    private javax.swing.JTextField JTextItemID;
    private javax.swing.JTextField JTextQuantitySold;
    private javax.swing.JTextField JTextSalesEntryID;
    private javax.swing.JTextField JTextSalesManagerID;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
