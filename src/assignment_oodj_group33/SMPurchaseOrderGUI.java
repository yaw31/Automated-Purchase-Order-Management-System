/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package assignment_oodj_group33;


import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class SMPurchaseOrderGUI extends javax.swing.JFrame {
    private User user;
    public SMPurchaseOrderGUI(User user) {
        this.user = user;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JBtnBack = new javax.swing.JButton();
        JLabelPurchaseOrder = new javax.swing.JLabel();
        JLabelPurchaseOrderID = new javax.swing.JLabel();
        JLabelRequisitionID = new javax.swing.JLabel();
        JTextPurchaseOrderID = new javax.swing.JTextField();
        JTextRequisitionID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTablePurchaseOrder = new javax.swing.JTable();
        JBtnSearch = new javax.swing.JButton();
        JBtnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Purchase Order Page");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        JBtnBack.setText("Back");
        JBtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtnBackActionPerformed(evt);
            }
        });

        JLabelPurchaseOrder.setText("PURCHASE ORDER");

        JLabelPurchaseOrderID.setText("PurchaseOrderID:");

        JLabelRequisitionID.setText("RequisitionID:");

        JTablePurchaseOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "PurchaseOrderID", "RequisitionID", "ItemID", "ItemName", "Quantity", "Price", "Status"
            }
        ));
        jScrollPane1.setViewportView(JTablePurchaseOrder);

        JBtnSearch.setText("Search");
        JBtnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtnSearchActionPerformed(evt);
            }
        });

        JBtnClear.setText("Clear");
        JBtnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JBtnSearch)
                                .addGap(18, 18, 18)
                                .addComponent(JBtnClear))
                            .addComponent(JLabelPurchaseOrder)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(JLabelRequisitionID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(JLabelPurchaseOrderID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(JTextPurchaseOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1))
                                    .addComponent(JTextRequisitionID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(JBtnBack)))
                        .addGap(50, 50, 50))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(JLabelPurchaseOrder)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLabelPurchaseOrderID)
                    .addComponent(JTextPurchaseOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JLabelRequisitionID)
                    .addComponent(JTextRequisitionID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBtnSearch)
                    .addComponent(JBtnClear))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(JBtnBack)
                .addGap(39, 39, 39))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void JBtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtnBackActionPerformed
        SalesManagerMenuGUI SMmenuForm = new SalesManagerMenuGUI(this.user);
        SMmenuForm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_JBtnBackActionPerformed

    private void JBtnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtnClearActionPerformed
        JTextPurchaseOrderID.setText("");
        JTextRequisitionID.setText("");
        
        loadOrderDataToTable();
    }//GEN-LAST:event_JBtnClearActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        loadOrderDataToTable();
        
        JTablePurchaseOrder.getSelectionModel().addListSelectionListener(event -> {
        if (!event.getValueIsAdjusting() && JTablePurchaseOrder.getSelectedRow() != -1) {
            int selectedRow = JTablePurchaseOrder.getSelectedRow();
            JTextPurchaseOrderID.setText(JTablePurchaseOrder.getValueAt(selectedRow, 0).toString());
            JTextRequisitionID.setText(JTablePurchaseOrder.getValueAt(selectedRow, 1).toString());

            ArrayList<PurchaseOrder> list = FileHandler.loadPOFile("purchase_order.txt");
            if (selectedRow < list.size()) {
                PurchaseOrder po = list.get(selectedRow);
                JTextPurchaseOrderID.setText(po.getPoId());
                JTextRequisitionID.setText(po.getPrId());
                }
            }
        });
    }//GEN-LAST:event_formWindowOpened

    private void JBtnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtnSearchActionPerformed
        try {
            String poIDKeyword = JTextPurchaseOrderID.getText().trim();
            String prIDKeyword = JTextRequisitionID.getText().trim();

            ArrayList<PurchaseOrder> results = FileHandler.Search(
                "purchase_order.txt",
                poIDKeyword,
                prIDKeyword
            );

            loadOrderDataToTable(results);
            
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Unexpected error: " + e.getMessage());
        }
    }//GEN-LAST:event_JBtnSearchActionPerformed
    
    private void loadOrderDataToTable() {
    DefaultTableModel model = (DefaultTableModel) JTablePurchaseOrder.getModel();
    model.setRowCount(0);

    ArrayList<PurchaseOrder> list = FileHandler.loadPOFile("purchase_order.txt");
    for (PurchaseOrder po : list) {
        model.addRow(new Object[]{
            po.getPoId(),
            po.getPrId(),
            po.getItemId(),
            po.getItemName(),
            po.getQuantity(),
            po.getTotalAmount(),
            po.getStatus()
            });
        }
    }
    
    private void loadOrderDataToTable(ArrayList<PurchaseOrder> list) {
    DefaultTableModel model = (DefaultTableModel) JTablePurchaseOrder.getModel();
    model.setRowCount(0);

    for (PurchaseOrder po : list) {
        model.addRow(new Object[]{
            po.getPoId(),
            po.getPrId(),
            po.getItemId(),
            po.getItemName(),
            po.getQuantity(),
            po.getTotalAmount(),
            po.getStatus()
            });
        }
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBtnBack;
    private javax.swing.JButton JBtnClear;
    private javax.swing.JButton JBtnSearch;
    private javax.swing.JLabel JLabelPurchaseOrder;
    private javax.swing.JLabel JLabelPurchaseOrderID;
    private javax.swing.JLabel JLabelRequisitionID;
    private javax.swing.JTable JTablePurchaseOrder;
    private javax.swing.JTextField JTextPurchaseOrderID;
    private javax.swing.JTextField JTextRequisitionID;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
